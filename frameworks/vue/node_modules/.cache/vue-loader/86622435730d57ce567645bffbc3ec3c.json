{"remainingRequest":"/Users/jeroen/Documents/_work/innouveau/projects/clients/024-klaas-nienhuis/024-bartenbach/dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeroen/Documents/_work/innouveau/projects/clients/024-klaas-nienhuis/024-bartenbach/dev/src/app.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/jeroen/Documents/_work/innouveau/projects/clients/024-klaas-nienhuis/024-bartenbach/dev/src/app.vue","mtime":1611141906287},{"path":"/Users/jeroen/Documents/_work/innouveau/projects/clients/024-klaas-nienhuis/024-bartenbach/dev/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeroen/Documents/_work/innouveau/projects/clients/024-klaas-nienhuis/024-bartenbach/dev/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jeroen/Documents/_work/innouveau/projects/clients/024-klaas-nienhuis/024-bartenbach/dev/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jeroen/Documents/_work/innouveau/projects/clients/024-klaas-nienhuis/024-bartenbach/dev/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeroen/Documents/_work/innouveau/projects/clients/024-klaas-nienhuis/024-bartenbach/dev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeroen/Documents/_work/innouveau/projects/clients/024-klaas-nienhuis/024-bartenbach/dev/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnQC9zdHlsZXMvaW5kZXguc2Nzcyc7CkBpbXBvcnQgJ0Avc3R5bGVzL3ZhcmlhYmxlcy5zY3NzJzsKCi5hcHAgewoKCiAgICBAaW5jbHVkZSBtb2JpbGUoKSB7CgoKICAgIH0KfQo="},{"version":3,"sources":["app.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AACA;;AAEA;;;AAGA;;;AAGA;AACA","file":"app.vue","sourceRoot":"src","sourcesContent":["<script>\n    import axios from 'axios';\n    import directions from '@/data/directions';\n\n    export default {\n        name: 'app',\n        components: {},\n        props: {},\n        computed: {\n            isLoaded() {\n                return this.$store.state.ui.fetchingStatus === 'loaded';\n            }\n        },\n        methods: {\n            init() {\n                this.loadData();\n\n            },\n            loadData() {\n                this.$store.commit('ui/updateProperty', {key: 'fetchingStatus', value: 'loading'});\n\n                axios\n                    .get(window.config.apiUrl)\n                    .then(response => {\n                        this.importDataToStore(response.data);\n                        this.$store.commit('ui/updateProperty', {key: 'fetchingStatus', value: 'loaded'});\n                    })\n                    .catch(error => {\n                        console.log(error)\n                    })\n                    .finally(() => this.loading = false)\n            },\n            importDataToStore(data) {\n                let currentLanguage;\n                this.$store.commit('languages/init', data.languages);\n                this.$store.commit('slides/init', data.slides);\n                this.$store.commit('directions/init', directions);\n                this.$store.commit('updateProperty', {key: 'contact', value: data.contact});\n                this.$store.commit('updateProperty', {key: 'pdf', value: data.pdf});\n                this.$store.commit('updateProperty', {key: 'privacyStatement', value: data.privacyStatement});\n                this.$store.commit('updateProperty', {key: 'logo', value: data.logo});\n\n                if (this.$store.state.slides.all.length > 0) {\n                    this.$store.commit('slides/setCurrent', this.$store.state.slides.all[0]);\n                } else {\n                    console.error('No slides present in data');\n                }\n                currentLanguage = this.$store.getters['languages/getItemByProperty']('iso_code', data.current_language, true);\n                if (currentLanguage) {\n                    this.$store.commit('languages/setCurrent', currentLanguage);\n                }\n            }\n        },\n        mounted() {\n            this.init();\n        }\n    }\n</script>\n\n\n<template>\n    <div class=\"app\">\n        <router-view\n            v-if=\"isLoaded\"/>\n    </div>\n</template>\n\n\n<style lang=\"scss\">\n    @import '@/styles/index.scss';\n    @import '@/styles/variables.scss';\n\n    .app {\n\n\n        @include mobile() {\n\n\n        }\n    }\n</style>"]}]}